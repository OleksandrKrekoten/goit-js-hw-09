{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAUC,SAASC,cAAc,SAGvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACJC,KAAKC,SAAW,IACnBJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAErBA,MAVNL,EAAQY,iBAAiB,UAczB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAY,IAAIC,SAAShB,GACzBiB,EAAY,GAClB,IAAK,MAAOC,EAAKC,KAAUJ,EAAUK,UACnCH,EAAUC,GAAOG,OAAOF,GAGzB,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAUM,OAAQD,GAAY,EAC/DnB,EAAcmB,EAAUL,EAAUZ,OAC/BmB,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MAAWP,EAAA2B,OAAOC,QAAQ,qBAAqBtB,QAAeC,UAChFsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAAWP,EAAA2B,OAAOG,QAAQ,oBAAoBxB,QAAeC,UACpFY,EAAUZ,MAAQY,EAAUZ,MAAQY,EAAUY,KAEhD7B,EAAQ8B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'\nconst formRef = document.querySelector('.form')\nformRef.addEventListener('submit', onSubmitForm)\n////////////////////////////////////////////////////create promise\nfunction createPromise(position, delay)  {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n       if (Math.random() > 0.3) {\n        resolve({ position, delay })\n      } \n        reject({ position, delay })\n      \n    },delay)\n  })\n} \n////////////////////////////////////////submit callback\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const formValue = new FormData(formRef);\n  const resultObj = {};\n  for (const [key, value] of formValue.entries()) {\n    resultObj[key] = Number(value);\n    \n  }\n   for (let position = 1; position <= resultObj.amount; position += 1){\n     createPromise(position, resultObj.delay)\n       .then(({ position, delay })=>{Notify.success(`Fulfilled promise ${position} in ${delay}ms`);})\n       .catch(({ position, delay })=>{Notify.failure(`Rejected promise ${position} in ${delay}ms`);})\n    resultObj.delay = resultObj.delay + resultObj.step;\n   }\n  formRef.reset()\n  \n}\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","formValue","FormData","resultObj","key","value","entries","Number","position1","amount","then","Notify","success","catch","failure","step","reset"],"version":3,"file":"03-promises.b8b54ef6.js.map"}